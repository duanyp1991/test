<?php
/**
 * ITORIS
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the ITORIS's Magento Extensions License Agreement
 * which is available through the world-wide-web at this URL:
 * http://www.itoris.com/magento-extensions-license.html
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to sales@itoris.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade the extensions to newer
 * versions in the future. If you wish to customize the extension for your
 * needs please refer to the license agreement or contact sales@itoris.com for more information.
 *
 * @category   ITORIS
 * @package    ITORIS_MWISHLIST
 * @copyright  Copyright (c) 2012 ITORIS INC. (http://www.itoris.com)
 * @license    http://www.itoris.com/magento-extensions-license.html  Commercial License
 */
?>
<?php
/** @var $this Itoris_MWishlist_Block_Frontview */
$namesmodel = Mage::getModel('itoris_mwishlist/mwishlistnames');
$namescollection = $namesmodel->getnamecollection(null, true);
$id = $this->getRequest()->getParam('tabId', $this->getTabId());
$version = Mage::getVersion();
$isEnabledPriceVisibility = $this->getDataHelper()->isEnabledProductVisibility();
$canAddAllToShoppingCart = true;
?>
<div id="central">
<div><label>Filter by SKU:</label> <input type="text" id="wishlist-product-filter" placeholder="type a product SKU" /> 
 <em>- Displaying <span id="nb-displayed-products"><?php echo count($this->getWishlistItems()); ?></span> of <?php echo count($this->getWishlistItems()); ?> product(s)</em>
</div>
<div id='central_head'>
	<?php
	$temp = array();
	$temp = $namesmodel->getNameById($id);
	$wishlistName = $temp['multiwishlist_name'];
	$wishlistId = $temp['multiwishlist_id']; ?>
</div>
<?php if ($this->getHasWishlistItems()): ?>
	<form id="wishlist-view-form" action="<?php echo $this->getUrl('*/*/update') ?>" method="post">
	<input type="hidden" name="mwishlist_id" value="<?php echo $wishlistId ?>" />
	<fieldset>
	<input type="hidden" name="tabId" value="<?php echo $id?>">
	<?php echo $this->getBlockHtml('formkey')?>
	<table class="data-table" id="wishlist-table">
		<?php if ($temp['multiwishlist_editable']): ?>
			<col width="1"/>
		<?php endif; ?>
		<col width="1"/>
		<col/>
		<col width="25%"/>
		<thead>
		<tr>
			<?php if ($temp['multiwishlist_editable']): ?>
				<th class="a-center"><input type="checkbox" name="all" onclick="checkAll(this.form,this.name);"></th>
			<?php endif; ?>
			<th><?php echo $this->__('Product') ?></th>
			<th><?php echo $this->__('Comment') ?></th>
			<th class="a-center"><span class="nobr"></span></th>
		</tr>
		</thead>
		<tbody>
		<?php 
		$products_by_custom_status = array();
		foreach($this->getWishlistItems() as $_item){
		    $_product = Mage::getModel('catalog/product')->load($_item->getProductId());
		    if(!array_key_exists($_product->getCustomStatus(), $products_by_custom_status)) {
		        $products_by_custom_status[$_product->getCustomStatus()] = array();
		    }
		    $products_by_custom_status[$_product->getCustomStatus()][] = array($_item, $_product);
		} 
		foreach($products_by_custom_status as $_item_arr):
		$new_category = True; 
		foreach ($_item_arr as $_item):
		    if($new_category == True): ?>
		        <tr data-status="<?php echo strtolower($_item[1]->getCustomStatus());?>">
		        	<th colspan="4">
			            <strong>Status:</strong>
			            <span class="custom_status_<?php echo $_item[1]->getCustomStatus();?>">
			                <?php echo $_item[1]->getAttributeText('custom_status');?>
			            </span>
		            </th>
		        </tr>
		        <?php 
			    $new_category = False;
		    endif;
		    $item = $_item[0];
		    $product = $item->getProduct();
		    $isVisibleProduct = $product->isVisibleInSiteVisibility();
			$priceVisibilityConfig = $isEnabledPriceVisibility ? $this->getProductPriceVisibilityConfig($product) : null;
			$urlParamName = Mage_Core_Controller_Front_Action::PARAM_NAME_URL_ENCODED;
			$continueUrl = Mage::helper('core')->urlEncode(Mage::getUrl('*/*/*', array(
				'_current' => true,
				'_use_rewrite' => true,
			)));
			$store = Mage::app()->getStore($item->getStoreId());
			$addToCartUrl = $this->getUrl('wishlist/index/cart', array(
				'item' => $item->getWishlistItemId(),
				'qty'  => '{{qty}}',
			));
			//$isVisibleProduct = $product->isVisibleInSiteVisibility();
			$wishlistItemId = $item->getId();
			?>
			<tr class="pdt-line" data-sku="<?php echo strtolower($product->getSku()); ?>" data-status="<?php echo strtolower($product->getCustomStatus()); ?>">
					<?php if ($temp['multiwishlist_editable']): ?>
						<td><input type="checkbox" class="single" name="<?php echo $item->getWishlistItemId() ?>"></td>
					<?php endif; ?>
					<td>
					<a class="product-image"
					   href="<?php echo $product->getProductUrl() ?>"
					   title="<?php echo $this->htmlEscape($product->getName()) ?>"><img src="<?php echo $product->getCustomImageUrl(); ?>" alt="<?php echo $product->getName(); ?>" width="200"  /></a>
					<?php if($product->getCustomStatus() == 5 and $product->getCustomProductQty() <= 0): ?>
					    <span class="custom_status_4"><?php echo $this->__('Backorder'); ?></span>
					<?php else: ?>
					    <span class="custom_status_<?php echo $product->getCustomStatus(); ?>"><?php echo $product->getAttributeText('custom_status'); ?></span>
					<?php endif; ?>
					<h2 class="product-name">
							<?php echo $this->htmlEscape($product->getSku()) ?>
							<br />
							<a
							href="<?php echo $product->getProductUrl() ?>"><?php echo $this->htmlEscape($product->getName()) ?></a>
					</h2>
					<?php if (!$priceVisibilityConfig || $priceVisibilityConfig['mode'] == Itoris_ProductPriceVisibility_Helper_Product::MODE_DEFAULT
						|| $priceVisibilityConfig['mode'] == Itoris_ProductPriceVisibility_Helper_Product::MODE_SHOW_PRICE_DISALLOW_ADD_TO_CART): ?>
						<?php
						echo $this->getCleanProductPriceHtml();
						$finalPrice = $product->getFinalPrice(1);
						$pointsPrice = $this->getPointsPrice($product, $finalPrice);
						?>

						<p class="price-box">
					<span class="regular-price" id="product-price-<?php echo $product->getId()?><?php echo $product->getIdSuffix() ?>">
						<?php if ($pointsPrice && $pointsPrice['override']): ?>
							<span class="price"><?php echo $this->getProductRewardsHelper()->__('%d RP', $pointsPrice['points']) ?></span>
						<?php else: ?>
							<span class="price"><?php echo Mage::helper('core')->currency($finalPrice, true, false); ?> <?php if ($pointsPrice && $pointsPrice['points']): echo $this->getProductRewardsHelper()->__('or %d RP', $pointsPrice['points']); endif; ?></span>
						<?php endif; ?>
					</span>
						</p>
					<?php elseif ($priceVisibilityConfig['mode'] == Itoris_ProductPriceVisibility_Helper_Product::MODE_OUT_OF_STOCK): ?>
						<p class="availability out-of-stock"><span><?php echo $this->__('Out of Stock') ?></span></p>
					<?php elseif ($priceVisibilityConfig['mode'] == Itoris_ProductPriceVisibility_Helper_Product::MODE_CUSTOM_MESSAGE): ?>
						<p><?php echo $priceVisibilityConfig['message'] ?></p>
					<?php endif; ?>
					<?php echo $this->getDetailsHtml($item) ?>
				</td>
				<td>
					<textarea name="description[<?php echo $item->getWishlistItemId() ?>]" rows="3" cols="5"
							  onfocus="focusComment(this)" onblur="focusComment(this)"
							  title="<?php echo $this->__('Comment') ?>"><?php echo $item->getDescription()
							? $item->getDescription() : $this->__('Please, enter your comments...') ?></textarea>
				</td>
				<td>
					<?php if (!$priceVisibilityConfig || $priceVisibilityConfig['mode'] == Itoris_ProductPriceVisibility_Helper_Product::MODE_DEFAULT): ?>
						<p><strong><?php echo $this->__('&nbsp;Add to Shopping Cart:') ?></strong></p>
						<?php if ((int)$version[2] >= 5): ?>
							<input type="text" class="input-text qty" name="qty[<?php echo $item->getId() ?>]" value="<?php echo $item->getQty() > 0 ? (int)$item->getQty() : 1 ?>"/>
						<?php endif ?>
						<?php if ($product->isSaleable()): ?>
							<button type="button" title="<?php echo $this->__('Add to Cart') ?>" onclick="mwishlistAddToCart('<?php echo $addToCartUrl ?>', <?php echo $item->getId() ?>);" class="button btn-cart">
								<span><span><?php echo $this->__('Add to Cart') ?></span></span>
							</button>
						<?php endif ?>
						<?php if ((int)$version[2] >= 5): ?>
							<?php echo $this->getDetailsLinkHtml($item); ?>
						<?php endif ?>
					<?php elseif ($priceVisibilityConfig && $priceVisibilityConfig['mode'] == Itoris_ProductPriceVisibility_Helper_Product::MODE_SHOW_PRICE_DISALLOW_ADD_TO_CART): ?>
						<p><?php echo $priceVisibilityConfig['message'] ?></p>
					<?php else:
						$canAddAllToShoppingCart = false;
					endif; ?>
				</td>
			</tr>
		<?php endforeach ?>
		<?php endforeach ?>
		</tbody>
	</table>
	<script type="text/javascript">decorateTable('wishlist-table')</script>
	<div class="buttons-set buttons-set2">
		<table width="100%">
			<tbody>
			<tr>
				<?php if ($temp['multiwishlist_editable'] && count($namescollection) > 1): ?>
					<td width="80%">
						<div class="div-mwishbottom">
							<button type="button" title="<?php echo $this->__('Add') ?>"
									onclick="mwishlistAddToCartCheckedItems(<?php echo $wishlistId ?>)"
									class="button btn-copy"><span><span><?php echo $this->__('Add Selected to Cart') ?></span></span>
							</button>
							<button type="button" title="<?php echo $this->__('Delete') ?>"
									onclick="mwishlistDeleteCheckedItems(<?php echo $wishlistId ?>)"
									class="button"><span><span><?php echo $this->__('Delete Selected') ?></span></span>
							</button>
							<select class="input.select" id="select_all" style="display:none" value=""/>
							<?php foreach ($namescollection as $row): ?>
								<?php if ($wishlistId == $row['multiwishlist_id']) continue; ?>
								<option value="<?php echo $row['multiwishlist_id']?>"><?php echo $this->__($row['multiwishlist_name'])?></option>
							<?php endforeach ?>
							</select>
							<?php if ($temp['multiwishlist_is_main'] == 1): ?>
							<button type="button" title="<?php echo $this->__('Move') ?>"
									onclick="moveCheckedItemsBetweenLists($('select_all').value)"
									class="button btn-move"><span><span><?php echo $this->__('Reserve Selected') ?></span></span>
							<?php else: ?>
							<button type="button" title="<?php echo $this->__('Move') ?>"
									onclick="moveCheckedItemsBetweenLists($('select_all').value)"
									class="button btn-move"><span><span><?php echo $this->__('Add Selected to wishlist') ?></span></span>
							</button>
							<?php endif; ?>
						</div>


					</td>
					<td width="20%" style="vertical-align: top;">
						<div class="div-mwishbottomright">
							<button type="submit" title="<?php echo $this->__('Update Wishlist') ?>"
									onclick="this.name='do'" class="button btn-update">
								<span><span><?php echo $this->__('Update Wishlist') ?></span></span></button>
						</div>
					</td>
				<?php endif; ?>
			</tr>
			</tbody>
		</table>
	</div>
	</fieldset>
	</form>
<?php else: ?>
	<p><?php echo $this->__('No items') ?></p>
<?php endif ?>
</div>
<script type="text/javascript">

if ($$('.iwishtabs .titles .title.current')[0]) {
	$$('.iwishtabs .titles .title.current')[0].removeClassName('current');
}
$('tab_title_<?php echo $id;?>').addClassName('current');
function checkAll(form, checkname) {
	if (form.elements[checkname].checked == true) {
		for (var i = 1, n = form.elements.length; i < n; i++) {
			if (form.elements[i].type == 'checkbox') {
				form.elements[i].checked = true;
			}
		}
	} else {
		for (i = 1,n = form.elements.length; i < n; i++) {
			if (form.elements[i].type == 'checkbox') {
				form.elements[i].checked = true;
				form.elements[i].checked = form.elements[i].defaultChecked;
			}
		}
	}
}

function removeItem(itemId) {
	if (confirmRemoveWishlistItem()) {
		new Ajax.Request('<?php echo Mage::getUrl('wishlist/index/ajax')?>', { method: 'post',
			parameters: {remove: itemId, tabId: $$('.title.current')[0].id.substring(10)},
			onSuccess: function(transport) {
				itorisWishlist.hideMobileContent(true);
				Element.hide('loading-mask');
				$('central').update(transport.responseText);
				mwishlistUpdateLink();
				retruncateOptionsTimeout();
				itorisWishlist.showMobileContent(true);
			},
			onLoading: Element.show('loading-mask')
		});
	}
}
function copyToWlist(itemId, listId) {
	itorisWishlist.hideMobileContent();
	new Ajax.Request('<?php echo Mage::getUrl('wishlist/index/ajax')?>', { method: 'post',
		parameters: {itemCopy: itemId, list: listId, tabId: listId},
		onSuccess: function(transport) {
			Element.hide('loading-mask');
			$('central').update(transport.responseText);
			mwishlistUpdateLink();
			retruncateOptionsTimeout();
			setTimeout(function(){itorisWishlist.showMobileContent();}, 100);
		},
		onLoading: Element.show('loading-mask')
	});
}
function copyCheckedToWlist(listId) {
	var array = new Array();
	var i = 0;
	$$('.single').each(function(elem) {
		if (elem.checked) {
			array[i] = elem.name;
			i++;
		}
	});
	if (array[0]) {
		new Ajax.Request('<?php echo Mage::getUrl('wishlist/index/ajax')?>', { method: 'post',
			parameters: {'itemsCopy[]': array,
				list: listId, tabId: listId},
			onSuccess: function(transport) {
				itorisWishlist.hideMobileContent(true);
				Element.hide('loading-mask');
				$('central').update(transport.responseText);
				mwishlistUpdateLink();
				retruncateOptionsTimeout();
				itorisWishlist.showMobileContent(true);
			},
			onLoading: Element.show('loading-mask')
		});
	} else {
		alert('Items not selected')
	}
}
function moveBetweenLists(itemId, listId) {
	itorisWishlist.hideMobileContent();
	new Ajax.Request('<?php echo Mage::getUrl('wishlist/index/ajax')?>', { method: 'post',
		parameters: {itemMove: itemId, list: listId, tabId: listId},
		onSuccess: function(transport) {
			Element.hide('loading-mask');
			$('central').update(transport.responseText);
			mwishlistUpdateLink();
			retruncateOptionsTimeout();
			setTimeout(function(){itorisWishlist.showMobileContent();}, 100);
		},
		onLoading: Element.show('loading-mask')
	});
}
function moveCheckedItemsBetweenLists(listId) {
	var array = new Array();
	var i = 0;
	$$('.single').each(function(elem) {
		if (elem.checked) {
			array[i] = elem.name;
			i++;
		}
	});
	if (array[0]) {
		new Ajax.Request('<?php echo Mage::getUrl('wishlist/index/ajax')?>', { method: 'post',
			parameters: {'itemsMove[]': array,
				list: listId, tabId: listId},
			onSuccess: function(transport) {
				itorisWishlist.hideMobileContent(true);
				Element.hide('loading-mask');
				$('central').update(transport.responseText);
				mwishlistUpdateLink();
				retruncateOptionsTimeout();
				itorisWishlist.showMobileContent(true);
			},
			onLoading: Element.show('loading-mask')
		});
	} else {
		alert('<?php echo addslashes($this->__('Items not selected')) ?>');
	}
}
function mwishlistAddToCartCheckedItems(wishlistId) {
	var items = mwishlistGetSelectedItems();
	if (items.length) {
		var params = {
			'items[]': items,
			wishlist_id: wishlistId
		};
		$$('#wishlist-view-form .qty').each(
			function (input) {
				params[input.name] = input.value;
			}
		);
		var url = '<?php echo $this->getUrl('*/*/addToCartSelectedItems') ?>';
		url += ((url.indexOf('?') >= 0) ? '&' : '?') + 'wishlist_id=' + wishlistId;
		var separator = '&';
		$$('#wishlist-view-form .qty').each(
			function (input) {
				url += separator + input.name + '=' + encodeURIComponent(input.value);
			}
		);
		for (var i = 0; i < items.length; i++) {
			url += separator + 'items[' + i + ']=' + items[i];
		}
		setLocation(url);
	} else {
		alert('<?php echo addslashes($this->__('Items not selected')) ?>');
	}
}
function mwishlistDeleteCheckedItems(listId) {
	var items = mwishlistGetSelectedItems();
	if (items.length) {
		if (confirm('<?php echo addslashes($this->__('Do you really want to delete selected products?')) ?>')) {
			new Ajax.Request('<?php echo Mage::getUrl('wishlist/index/ajax') ?>', {
				method: 'post',
				parameters: {
					'itemsDelete[]': items,
					list: listId,
					tabId: listId
				},
				onSuccess: function(transport) {
					itorisWishlist.hideMobileContent(true);
					Element.hide('loading-mask');
					$('central').update(transport.responseText);
					mwishlistUpdateLink();
					retruncateOptionsTimeout();
					itorisWishlist.showMobileContent(true);
				},
				onLoading: Element.show('loading-mask')
			});
		}
	} else {
		alert('<?php echo addslashes($this->__('Items not selected')) ?>');
	}
}
function mwishlistGetSelectedItems() {
	var items = [];
	$$('.single').each(function(elem) {
		if (elem.checked) {
			items.push(elem.name);
		}
	});
	return items;
}
function confirmRemoveWishlistItem() {
	return confirm('<?php echo $this->__('Are you sure you want to remove this product from your wishlist?') ?>');
}
function confirmRemoveWishlist() {
	return confirm('<?php echo $this->__('Do you really want to delete this Wishlist along with all products in it?') ?>');
}
function focusComment(obj) {
	if (obj.value == 'Please, enter your comments...') {
		obj.value = '';
	} else if (obj.value == '') {
		obj.value = 'Please, enter your comments...';
	}
}
function addAllWItemsToCart(wishlistId, formId) {
	var url = '<?php echo $this->getUrl('*/*/allcart') ?>';
	url += (url.indexOf('?') >= 0) ? '&wishlist_id=' + wishlistId : '?wishlist_id=' + wishlistId;
	var separator = '&';
	$$('#' + (formId || 'wishlist-view-form') + ' .qty').each(
		function (input, index) {
			url += separator + input.name + '=' + encodeURIComponent(input.value);
		}
	);
	setLocation(url);
}

function mwishlistAddToCart(url, itemId) {
	var qtyElm = document.getElementsByName('qty[' + itemId + ']')[0];
	if (qtyElm) {
		url = url.sub('{{qty}}', parseNumber(qtyElm.value));
	}
	setLocation(url);
}

currentWishlistName = '<?php echo addslashes($wishlistName) ?>';
</script>